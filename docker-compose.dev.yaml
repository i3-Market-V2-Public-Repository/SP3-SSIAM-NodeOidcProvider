version: '3.6'

services:
  oidc-provider-app:
    build: 
      context: .
      args: 
        USER_ID: ${USER_ID-1000}
        GROUP_ID: ${GROUP_ID-1000}
      dockerfile: ./Dockerfile.dev
    image: i3market/oidc-provider-dev
    container_name: oidc-provider-app
    environment: 
      OIDC_PROVIDER_DB_HOST: oidc-provider-db
      OIDC_PROVIDER_DB_PORT: 27017
      OIDC_PROVIDER_DB_USERNAME: oidp
      OIDC_PROVIDER_DB_PASSWORD: ngk5vnELdNJh3YRW
      OIDC_PROVIDER_DB_DATABASE: oidp
      OIDC_PROVIDER_REVERSE_PROXY: 1
      OIDC_PROVIDER_ISSUER: https://oidc.i3m.gold.upc.edu/oidc
      OIDC_PROVIDER_NGROK: 0
      OIDC_PROVIDER_LOCALHOST_RUN: 1
    volumes:
      - ./app:/app
      - oidc-ssh:/ssh
    ports:
      - 30002:3000
      - 127.0.0.1:9229:9229
    command:
      - ./scripts/start.sh
    networks:
      - oidc-net
    depends_on:
      - oidc-provider-db
  oidc-provider-db:
    container_name: oidc-provider-db
    image: mongo:4-bionic
    restart: always
    networks:
      - oidc-net
    environment:
      MONGO_INITDB_ROOT_USERNAME: oidp
      MONGO_INITDB_ROOT_PASSWORD: ngk5vnELdNJh3YRW
      MONGO_INITDB_DATABASE: oidp
    ports:
      - 27017:27017
    volumes:
      - oidc-mongo:/data/db
      - ./db/scripts:/data/scripts
      - ./db/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    command: --quiet --setParameter logLevel=0
networks:
  oidc-net:
volumes:
  oidc-mongo:
  oidc-ssh:
